replicaCount: $KEYCLOAK_INSTANCES
maxSurge: 1
maxUnavailable: 0
nameOverride: $RESOURCE_NAME_PREFIX-keycloak
image:
  repository: $DOCKER_REPOSITORY_ADDRESS/geoss_keycloak
  pullPolicy: Always
  tag: "$DOCKER_IMAGE_TAG"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
    add:
    - SETGID
    - SETUID
    - DAC_OVERRIDE
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 8443
  targetPort: 8443
  protocol: TCP
  name: http

resources:
  limits:
    cpu: $KEYCLOAK_CPU_LIMIT
    memory: $KEYCLOAK_MEMORY_LIMIT
  requests:
    cpu: $KEYCLOAK_CPU_REQUEST
    memory: $KEYCLOAK_MEMORY_REQUEST

autoscaling:
  enabled: false

pvc:
volumes:
  - name: tls-cert
    secret:
      secretName: $RESOURCE_NAME_PREFIX-tls-cert-idp
  - name: tls-key
    secret:
      secretName: $RESOURCE_NAME_PREFIX-tls-cert-idp

volumeMounts:
  - name: tls-cert
    mountPath: "/etc/x509/https/tls.crt"
    subPath: "tls.crt"
    readOnly: true
  - name: tls-key
    mountPath: "/etc/x509/https/tls.key"
    subPath: "tls.key"
    readOnly: true

nodeSelector:
  node-pool: geoss

tolerations:
    -   key: "project"
        operator: "Equal"
        value: "geoss"
        effect: "NoExecute"

env:
  - name: KC_DB
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcDb
  - name: KC_DB_URL
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcDbUrl
  - name: KC_DB_USERNAME
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcDbUsername
  - name: KC_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcDbPassword
  - name: KEYCLOAK_ADMIN
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: keycloakAdmin
  - name: KEYCLOAK_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: keycloakAdminPassword
  - name: KC_HOSTNAME
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcHostname
  - name: KC_HOSTNAME_STRICT
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcHostnameStrict
  - name: KC_HTTP_ENABLED
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcHttpEnabled
  - name: KC_PROXY_HEADERS
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: kcProxyHeaders
  - name: PROXY_ADDRESS_FORWARDING
    valueFrom:
      secretKeyRef:
        name: geoss-${DEPLOY_ENV}-keycloak-env
        key: proxyHeadersForwarding

secrets:
  - name: geoss-${DEPLOY_ENV}-keycloak-env
    type: Opaque
    data:
      kcDb: "mariadb"
      kcDbUrl: "jdbc:mariadb://geoss-${DEPLOY_ENV}-db:3306/geoss_keycloak_db?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false&useSSL=false&allowPublicKeyRetrieval=true"
      kcDbUsername: "${DATABASE_USERNAME_APP}"
      kcDbPassword: "${DATABASE_PASSWORD_APP}"
      keycloakAdmin: "${KEYCLOAK_ADMIN_USERNAME}"
      keycloakAdminPassword: "${KEYCLOAK_ADMIN_PASSWORD}"
      kcHostname: "${IDP_DOMAIN_NAME}"
      kcHostnameStrict: "false"
      kcHttpEnabled: "true"
      kcProxyHeaders: "xforwarded"
      proxyHeadersForwarding: "true"

networkPolicy:
    egress:
        # Allow connect to DNS
        - to:
          ports:
              - protocol: TCP
                port: 53
              - protocol: UDP
                port: 53
        # Allow connect to other containers
        - to:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-db
          ports:
              - protocol: TCP
                port: 3306
        - to:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-maildev
          ports:
              - protocol: TCP
                port: 1025                
    ingress:
        # Allow to connect from other containers
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-contents
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-nginx
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-personaldata
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-proxy
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-settings
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-ui
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-worker-geodab-worker
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-worker-sdg-worker
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-worker-thesaurus-worker
          ports:
              - protocol: TCP
                port: 8443
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-worker-wikipedia-worker
          ports:
              - protocol: TCP
                port: 8443

