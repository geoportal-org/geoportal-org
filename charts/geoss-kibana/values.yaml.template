replicaCount: $KIBANA_INSTANCES
maxSurge: 1
maxUnavailable: 0
nameOverride: $RESOURCE_NAME_PREFIX-kibana
image:
  repository: eversisdawis.azurecr.io/geoss/geoss_kibana
  pullPolicy: Always
  tag: "$DOCKER_IMAGE_TAG"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  capabilities:
    drop:
    - ALL
    add:
    - SETGID
    - SETUID
    - DAC_OVERRIDE
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001

service:
  type: ClusterIP
  port: 5601
  targetPort: 5601
  protocol: TCP
  name: http

resources:
  limits:
    memory: $KIBANA_MEMORY_LIMIT
  requests:
    cpu: $KIBANA_CPU_REQUEST
    memory: $KIBANA_MEMORY_REQUEST

autoscaling:
  enabled: false

pvc:
  - name: geoss-${DEPLOY_ENV}-kibana-storage
    server: "$KIBANA_FILES_SHARE_SERVER"
    resourceGroup: "$KIBANA_FILES_SHARE_RESOURCE_GROUP"
    accessMode: ReadWriteMany
    storageSecretName: geoss-${DEPLOY_ENV}-kibana-storage-secret
    shareName: "$KIBANA_FILES_SHARE_NAME"
    folderName: kibana
    uid: 1000
    guid: 1000
    chmod: "0777"
    capacity: 10Gi
volumes:
  - name: geoss-${DEPLOY_ENV}-kibana-storage
    persistentVolumeClaim:
      claimName: geoss-${DEPLOY_ENV}-kibana-storage

volumeMounts:
  - name: geoss-${DEPLOY_ENV}-kibana-storage
    mountPath: "/bitnami/kibana"

nodeSelector:
  node-pool: geoss

tolerations:
    -   key: "project"
        operator: "Equal"
        value: "geoss"
        effect: "NoExecute"

env:
  - name: KIBANA_ELASTICSEARCH_URL
    value: "geoss-${DEPLOY_ENV}-els-eck-elasticsearch-es-http"
  - name: KIBANA_PASSWORD
    value: "${ELS_KIBANA_PASSWORD}"
  - name: GEOSS_PASSWORD
    value: "${ELS_GEOSS_PASSWORD}"

secrets:
  - name: geoss-${DEPLOY_ENV}-kibana-storage-secret
    type: Opaque
    data:
      azurestorageaccountname: "$KIBANA_FILES_SHARE_ACCOUNT_NAME"
      azurestorageaccountkey: "$KIBANA_FILES_SHARE_ACCOUNT_KEY"

networkPolicy:
    egress:
        # Allow connect to DNS
        - to:
          ports:
              - protocol: TCP
                port: 53
              - protocol: UDP
                port: 53
        # Allow connect to other containers
        - to:
            - podSelector:
                matchLabels:
                    elasticsearch.k8s.elastic.co/cluster-name: $RESOURCE_NAME_PREFIX-els-eck-elasticsearch
          ports:
              - protocol: TCP
                port: 9200
    ingress:
        # Allow to connect from DMZ
        - from:
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/instance: $RESOURCE_NAME_PREFIX-nginx
          ports:
              - protocol: TCP
                port: 5601