plugins {
    id 'java-library'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube'
    id 'project-report'
    id "io.spring.dependency-management"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://jakarta.oss.sonatype.org/content/groups/staging/' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "net.javacrumbs.shedlock:shedlock-bom:${shedlockVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springdoc:springdoc-openapi-starter-common:${springdocOpenapiVersion}"
    implementation 'org.hibernate.orm:hibernate-envers'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    compileOnly 'org.springframework:spring-jdbc'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:${therapiJavadocScribeVersion}"
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

checkstyle {
    configFile "${project.rootDir}/../eversis_checks.xml" as File
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}
