plugins {
    id 'org.springframework.boot'
    id 'com.gorylenko.gradle-git-properties'
    id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.eclipse.angus', module: 'angus-mail'
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocOpenapiVersion}"
    implementation 'org.liquibase:liquibase-core'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'net.javacrumbs.shedlock:shedlock-spring'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template'
    implementation project(':geoss-common')
    implementation project(':common')
    implementation project(':dashboards')
    implementation project(':extensions')
    implementation project(':recommendations')
    implementation project(':relations')
    implementation project(':resources')
    implementation project(':workflow')
    implementation project(':elasticsearch')
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.hsqldb:hsqldb'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "com.github.therapi:therapi-runtime-javadoc:${therapiJavadocScribeVersion}"
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:${therapiJavadocScribeVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mariadb'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'org.testcontainers:postgresql'
    testCompileOnly 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

gitProperties {
    failOnNoGitDirectory = false
}

springBoot {
    buildInfo()
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    archiveClassifier = 'boot'
    exclude('application-local*.properties')
}

tasks.named('jar') {
    archiveClassifier = ''
    exclude('application-local*.properties')
}
