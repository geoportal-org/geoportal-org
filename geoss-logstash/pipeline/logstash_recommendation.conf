input {
  jdbc {
    jdbc_connection_string => "jdbc:mariadb://geoss-db:3306/geoss_curated_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
    jdbc_user => "admin"
    jdbc_password => "qaz123"
    jdbc_driver_library => "/usr/share/logstash/lib/mariadb-java-client-3.1.4.jar"
    jdbc_driver_class => "org.mariadb.jdbc.Driver"
    jdbc_fetch_size => 100
	record_last_run	=> false
	clean_run => true
    statement => "
SELECT
    r.id AS recommendation_id,
    rk.name AS term,
    re.name AS entity_name,
    re.id AS entity_id,
    re.description AS entity_description,
    re.code AS entity_code,
    d.code AS entity_data_source,
    re.orderWeight AS order_weight
FROM recommendation_keyword rk
JOIN recommendation r on r.id = rk.recommendationId
JOIN recommendation_entity re on r.id = re.recommendationId
JOIN datasource d on re.dataSourceId = d.id;
    "
    }
}

filter{
	aggregate{
		task_id=>"%{term}"
		code => "
			map['term'] = event.get('term')
			map['recommendationId'] = event.get('recommendation_id')
			map['entities'] ||= []
			map['entities_list'] ||= []
			if (event.get('entity_id') != nil)
				if !( map['entities_list'].include? event.get('entity_id') )
					map['entities_list'] << event.get('entity_id')
					map['entities'] << {
						'name' => event.get('entity_name'),
						'description' => event.get('entity_description'),
						'code' => event.get('entity_code'),
						'dataSource' => event.get('entity_data_source'),
						'orderWeight' => event.get('order_weight')
					}
				end
			end
			event.cancel()
		"
		push_previous_map_as_event => true
		timeout => 10
	}

	mutate {
		remove_field => ["entities_list", "tags"]
	}

	# Drop the raw events, just keep the aggregates
	if ![term] {
		drop {}
	}
}

output {
  stdout { codec => json_lines }
  elasticsearch {
    "hosts" => "geoss-els:9200"
    "user" => "elastic"
    "password" => "elastic123"
    "index" => "geoss-recommendation"
    "document_id" => "%{term}"
  }
}
