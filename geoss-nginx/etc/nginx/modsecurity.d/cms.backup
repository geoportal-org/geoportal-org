## Set vars here
SecAction \
    "id:900990,\
    phase:1,\
    nolog,\
    pass,\
    t:none,\
    setvar:tx.crs_setup_version=330"

# Default recommended configuration
SecRuleEngine On
SecRequestBodyAccess On

######################BEGGINING OF LIFERAY DISABLED RULES########################
# Disable rules that cause problems with Liferay functionality
#SecRule REQUEST_URI "@contains /~/control_panel/manage" \
#    "phase:2,\
#    nolog,\
#    id:100000,\
#    ctl:ruleRemoveById=942170,\
#    ctl:ruleRemoveById=941370,\
#    ctl:ruleRemoveById=941130,\
#    ctl:ruleRemoveById=941110,\
#    ctl:ruleRemoveById=941100,\
#    ctl:ruleRemoveById=934100,\
#    ctl:ruleRemoveById=933210,\
#    ctl:ruleRemoveById=933180,\
#    ctl:ruleRemoveById=932150,\
#    ctl:ruleRemoveById=932140,\
#    ctl:ruleRemoveById=932100,\
#    ctl:ruleRemoveById=941140,\
#    ctl:ruleRemoveById=932105,\
#    ctl:ruleRemoveById=941190,\
#    ctl:ruleRemoveById=941180,\
#    ctl:ruleRemoveById=941170,\
#    ctl:ruleRemoveById=921110,\
#    ctl:ruleRemoveById=942360,\
#    ctl:ruleRemoveById=942230,\
#    ctl:ruleRemoveById=942100,\
#    ctl:ruleRemoveById=942220,\
#    ctl:ruleRemoveById=932115,\
#    ctl:ruleRemoveById=941120,\
#    ctl:ruleRemoveById=942270,\
#    ctl:ruleRemoveById=942140,\
#    ctl:ruleRemoveById=942250,\
#    ctl:ruleRemoveById=932120,\
#    ctl:ruleRemoveById=942320,\
#    ctl:ruleRemoveById=942350,\
#    ctl:ruleRemoveById=930120,\
#    ctl:ruleRemoveById=932160,\
#    ctl:ruleRemoveById=949110,\
#    pass"

#SecRule REQUEST_URI "@contains /" \
#    "phase:2,\
#    nolog,\
#    id:100001,\
#    ctl:ruleRemoveById=932110,\
#    ctl:ruleRemoveById=941310,\
#    ctl:ruleRemoveById=933160,\
#    ctl:ruleRemoveById=920470,\
#    ctl:ruleRemoveById=932130,\
#    ctl:ruleRemoveById=911100,\
#    ctl:ruleRemoveById=920100,\
#    ctl:ruleRemoveById=920420,\
#    ctl:ruleRemoveById=920170,\
#    ctl:ruleRemoveById=942190,\
#    pass"

#SecRule REQUEST_URI "@contains /o/headless-delivery" \
#    "phase:2,\
#    nolog,\
#    id:100002,\
#    ctl:ruleRemoveById=942100,\
#    pass"

#SecRule REQUEST_URI "@contains /combo" \
#    "phase:2,\
#    nolog,\
#    id:100003,\
#    ctl:ruleRemoveById=932120,\
#    ctl:ruleRemoveById=930120,\
#    ctl:ruleRemoveById=932100,\
#    ctl:ruleRemoveById=932160,\
#    ctl:ruleRemoveById=949110,\
#    ctl:ruleRemoveById=942100,\
#    ctl:ruleRemoveById=932105,\
#    ctl:ruleRemoveById=932115,\
#    ctl:ruleRemoveById=920220,\
#    pass"

#SecRule REQUEST_URI "@contains /dynamic-data-mapping-form-context-provider" \
#    "phase:1,\
#    nolog,\
#    id:100004,\
#    ctl:requestBodyAccess=Off,\
#    pass"

#SecRule REQUEST_URI "@contains /dynamic-data-mapping-form-evaluator" \
#    "phase:1,\
#    nolog,\
#    id:100005,\
#    ctl:requestBodyAccess=Off,\
#    pass"
###############################END OF LIFERAY DISABLED RULES############################

#DISABLED RULES BLOCKING KEYCLOAK
SecRule REQUEST_URI "@contains /" \
    "phase:2,\
    nolog,\
    id:100001,\
     ctl:ruleRemoveById=949110,\
    pass"

# Uncomment to disable body access
#SecRule REQUEST_URI "@contains /control_panel/manage" \
#    "phase:1,\
#    nolog,\
#    id:100009,\
#    ctl:requestBodyAccess=Off,\
#    pass"

# include ModSecurity Core Rules Set configuration
Include /etc/nginx/modsecurity.d/rules/*.conf

# Enable XML request body parser.
SecRule REQUEST_HEADERS:Content-Type "text/xml" \
    "id:'200000',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"

SecRequestBodyLimit 209715200 # 200 MB
SecRequestBodyNoFilesLimit 52428800 # 50 MiB #131072 # 128K
SecRequestBodyLimitAction Reject

# Verify that we've correctly processed the request body.
# As a rule of thumb, when failing to process a request body
# you should reject the request (when deployed in blocking mode)
# or log a high-severity alert (when deployed in detection-only mode).
#
SecRule REQBODY_ERROR "!@eq 0" \
    "id:'200002', phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"

# By default be strict with what we accept in the multipart/form-data
# request body. If the rule below proves to be too strict for your
# environment consider changing it to detection-only. You are encouraged
# _not_ to remove it altogether.
#
SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
    "id:'200003',phase:2,t:none,log,deny,status:400, \
    msg:'Multipart request body failed strict validation: \
    PE %{REQBODY_PROCESSOR_ERROR}, \
    BQ %{MULTIPART_BOUNDARY_QUOTED}, \
    BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
    DB %{MULTIPART_DATA_BEFORE}, \
    DA %{MULTIPART_DATA_AFTER}, \
    HF %{MULTIPART_HEADER_FOLDING}, \
    LF %{MULTIPART_LF_LINE}, \
    SM %{MULTIPART_MISSING_SEMICOLON}, \
    IQ %{MULTIPART_INVALID_QUOTING}, \
    IP %{MULTIPART_INVALID_PART}, \
    IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
    FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"

# This was changed by us
SecRule MULTIPART_UNMATCHED_BOUNDARY "@eq 1" \
    "id:'200004',phase:2,t:none,log,deny,status:44,msg:'Multipart parser detected a possible unmatched boundary.'"

SecPcreMatchLimit 1000
SecPcreMatchLimitRecursion 1000

SecRule TX:/^MSC_/ "!@streq 0" \
    "id:'200005',phase:2,t:none,deny,msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"

# Allow ModSecurity to access response bodies.
SecResponseBodyAccess Off
SecDebugLog /var/log/nginx/modsec_cms_debug.log
SecDebugLogLevel 0
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"
SecAuditLogParts ABIJDEFHZ
SecAuditLogType Serial
SecAuditLog /var/log/nginx/modsec_cms_audit.log
SecArgumentSeparator &
SecCookieFormat 0
SecTmpDir /var/nginx/mod_security_cms_tmp
SecDataDir /var/nginx/mod_security_cms_tmp