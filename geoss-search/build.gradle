plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube'
    id 'project-report'
    id 'org.springframework.boot'
    id "io.spring.dependency-management"
    id 'com.gorylenko.gradle-git-properties'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchRestHighLevelClientVersion}"
    implementation 'org.locationtech.jts:jts-core:1.19.0'
    implementation 'org.locationtech.spatial4j:spatial4j:0.8'
    implementation "com.rometools:rome:${rometoolsRomeVersion}"
    implementation "com.rometools:rome-modules:${rometoolsRomeVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocOpenapiVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocOpenapiVersion}"
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly "com.github.therapi:therapi-runtime-javadoc:${therapiJavadocScribeVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:${therapiJavadocScribeVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testCompileOnly 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('jar') {
    archiveClassifier = ''
    exclude('application-local*.properties')
}

tasks.named('bootJar') {
    archiveClassifier = 'boot'
    exclude('application-local*.properties')
}

springBoot {
    buildInfo()
}

gitProperties {
    failOnNoGitDirectory = false
}

checkstyle {
    configFile "${project.rootDir}/../eversis_checks.xml" as File
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

clean {
    delete 'tomcat'
}
