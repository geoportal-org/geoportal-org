plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube'
    id 'project-report'
    id 'org.springframework.boot'
    id "io.spring.dependency-management"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    set('elasticsearch.version', '6.6.2')
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'junit', module: 'junit'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://jakarta.oss.sonatype.org/content/groups/staging/' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.data:spring-data-commons-core:1.4.1.RELEASE'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.6.2'
    implementation 'org.locationtech.spatial4j:spatial4j:0.7'
    implementation 'org.locationtech.jts:jts-core:1.16.1'

    implementation 'com.rometools:rome:1.12.0'
    implementation 'com.rometools:rome-modules:1.12.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.28.2'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform() {
        includeEngines 'junit-jupiter'
    }
}

checkstyle {
    configFile "${project.rootDir}/../eversis_checks.xml" as File
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

bootJar {
    exclude("application*.yml")
    exclude("log4j2-*.xml")
}
