spring.security.oauth2.enabled=true
spring.security.oauth2.post-logout-redirect-uri={baseUrl}/login

spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=geoss-settings
#spring.security.oauth2.client.registration.keycloak.client-secret=
spring.security.oauth2.client.registration.keycloak.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak

spring.security.oauth2.client.provider.keycloak.authorization-uri=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.issuer-uri=${spring.security.oauth2.base-uri}/realms/geoss
spring.security.oauth2.client.provider.keycloak.user-info-uri=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=header
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=${spring.security.oauth2.base-uri}/realms/geoss

springdoc.swagger-ui.oauth.clientId=geoss-settings
#springdoc.swagger-ui.oauth.clientSecret=
springdoc.swagger-ui.oauth.realm=geoss
springdoc.swagger-ui.oauth.appName=Keycloak
springdoc.swagger-ui.oauth.useBasicAuthenticationWithAccessCodeGrant=true

openapi.oauth2.oauth-flow.authorizationUrl=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/auth
openapi.oauth2.oauth-flow.tokenUrl=${spring.security.oauth2.base-uri}/realms/geoss/protocol/openid-connect/token
openapi.oauth2.oauth-flow.refreshUrl=
