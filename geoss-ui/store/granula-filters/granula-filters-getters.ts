export enum GranulaFiltersGetters {
    productType = 'granulaFilters/productType',
    productTypeOptions = 'granulaFilters/productTypeOptions',
    sensorPolarisation = 'granulaFilters/sensorPolarisation',
    sensorPolarisationOptions = 'granulaFilters/sensorPolarisationOptions',
    sensorMode = 'granulaFilters/sensorMode',
    sensorModeOptions = 'granulaFilters/sensorModeOptions',
    sensorSwath = 'granulaFilters/sensorSwath',
    sensorSwathOptions = 'granulaFilters/sensorSwathOptions',
    instrument = 'granulaFilters/instrument',
    instrumentOptions = 'granulaFilters/instrumentOptions',
    productLevel = 'granulaFilters/productLevel',
    productLevelOptions = 'granulaFilters/productLevelOptions',
    timeliness = 'granulaFilters/timeliness',
    timelinessOptions = 'granulaFilters/timelinessOptions',
    cloudCoverage = 'granulaFilters/cloudCoverage',
    cloudCoverageAvailable = 'granulaFilters/cloudCoverageAvailable',
    relativeOrbit = 'granulaFilters/relativeOrbit',
    relativeOrbitAvailable = 'granulaFilters/relativeOrbitAvailable',
    row = 'granulaFilters/row',
    rowAvailable = 'granulaFilters/rowAvailable',
    path = 'granulaFilters/path',
    pathAvailable = 'granulaFilters/pathAvailable',
    fromDate = 'granulaFilters/fromDate',
    toDate = 'granulaFilters/toDate',
    granulaFiltersAvailable = 'granulaFilters/granulaFiltersAvailable',
    containerVisible = 'granulaFilters/containerVisible',
    stateMapped = 'granulaFilters/stateMapped',
    availableQueryable = 'granulaFilters/availableQueryable',
    availableContinuous = 'granulaFilters/availableContinuous',
    availableInteger = 'granulaFilters/availableInteger',
    shareParams = 'granulaFilters/shareParams',
    saveParams = 'granulaFilters/saveParams',
}
