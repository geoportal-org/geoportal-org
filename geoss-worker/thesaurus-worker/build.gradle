plugins {
    id 'org.springframework.boot'
    id 'com.gorylenko.gradle-git-properties'
    id 'java'
}

apply from: "$rootDir/gradle/integration-test.gradle"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocOpenapiVersion}"
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
    implementation project(':core:common')
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime'
    runtimeOnly "com.github.therapi:therapi-runtime-javadoc:${therapiJavadocScribeVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:${therapiJavadocScribeVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testCompileOnly 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.glassfish.jaxb:jaxb-runtime'
    testAnnotationProcessor 'org.projectlombok:lombok'
    integrationTestImplementation 'com.squareup.okhttp3:mockwebserver'
    integrationTestImplementation 'com.squareup.okhttp3:okhttp'
    integrationTestCompileOnly 'org.projectlombok:lombok'
    integrationTestRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
    integrationTestRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    integrationTestRuntimeOnly 'org.glassfish.jaxb:jaxb-runtime'
    integrationTestAnnotationProcessor 'org.projectlombok:lombok'
}

gitProperties {
    failOnNoGitDirectory = false
}

springBoot {
    buildInfo()
}

clean {
    delete 'logs'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('jar') {
    archiveClassifier = ''
    exclude('application-local*.properties')
}

tasks.named('bootJar') {
    archiveClassifier = 'boot'
    exclude('application-local*.properties')
}
